name: Check Browser Versions

on:
  workflow_dispatch:  # Allow manual triggering or triggered by schedule-browser-updates.yml

env:
  REGISTRY: browsergrid

jobs:
  get-playwright-version:
    runs-on: ubuntu-latest
    outputs:
      playwright_version: ${{ steps.get-version.outputs.playwright_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get latest Playwright version
        id: get-version
        run: |
          PLAYWRIGHT_VERSION=$(node docker/scripts/playwright-version-tracker.js --get-playwright-version)
          echo "playwright_version=${PLAYWRIGHT_VERSION}" >> $GITHUB_OUTPUT
          echo "Latest Playwright version: ${PLAYWRIGHT_VERSION}"

  check-browser-versions:
    needs: get-playwright-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, chromium, firefox, webkit]
    outputs:
      has_updates: ${{ steps.check-updates.outputs.has_updates }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Get browser version
        id: get-browser-version
        run: |
          BROWSER_VERSION=$(node docker/scripts/playwright-version-tracker.js --get-single-browser-version ${{ matrix.browser }})
          echo "browser_version=${BROWSER_VERSION}" >> $GITHUB_OUTPUT
          echo "${{ matrix.browser }} version: ${BROWSER_VERSION}"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Check if update needed
        id: check-updates
        run: |
          # Check if image with this tag already exists using our script
          TAG_EXISTS=$(node docker/scripts/playwright-version-tracker.js --check-version-exists ${{ matrix.browser }} ${{ steps.get-browser-version.outputs.browser_version }} ${{ env.REGISTRY }})
          
          if [ "${TAG_EXISTS}" = "false" ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Update needed for ${{ matrix.browser }} version ${{ steps.get-browser-version.outputs.browser_version }}"
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No update needed for ${{ matrix.browser }} version ${{ steps.get-browser-version.outputs.browser_version }}"
          fi

