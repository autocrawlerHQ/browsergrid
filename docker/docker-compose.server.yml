name: browsergrid-server
services:
  db:
    container_name: browsergrid-db
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../.env
    environment:
      - POSTGRES_USER=${BROWSERGRID_POSTGRES_USER:-browsergrid}
      - POSTGRES_PASSWORD=${BROWSERGRID_POSTGRES_PASSWORD:-browsergrid}
      - POSTGRES_DB=${BROWSERGRID_POSTGRES_DB:-browsergrid}
    ports:
      - "${BROWSERGRID_POSTGRES_PORT:-5432}:5432"
    networks:
      - browsergrid_server
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U browsergrid -d browsergrid"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - browsergrid_server

  redis:
    container_name: browsergrid-redis
    image: redis:latest
    ports:
      - "${BROWSERGRID_REDIS_PORT:-6379}:6379"
    networks:
      - browsergrid_server  
      
  server:
    container_name: browsergrid-server
    build:
      context: ..
      dockerfile: docker/server/Dockerfile
    env_file:
      - ../.env
    environment:
      - BROWSERGRID_ENV=dev
      - BROWSERGRID_POSTGRES_HOST=db
      - BROWSERGRID_POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BROWSERGRID_API_PORT:-8765}:8765"
    networks:
      - browsergrid_server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  worker:
    container_name: browsergrid-worker
    build:
      context: ..
      dockerfile: docker/worker/Dockerfile
    env_file:
      - ../.env
    environment:
      - BROWSERGRID_POSTGRES_HOST=db
      - BROWSERGRID_POSTGRES_PORT=5432
      # - BROWSERGRID_WORKER_POOL_ID=${BROWSERGRID_WORKER_POOL_ID}  # Optional - will create default pool
      - BROWSERGRID_WORKER_NAME=${BROWSERGRID_WORKER_NAME:-worker-docker}
      - BROWSERGRID_WORKER_PROVIDER=${BROWSERGRID_WORKER_PROVIDER:-docker}
      - BROWSERGRID_WORKER_CONCURRENCY=${BROWSERGRID_WORKER_CONCURRENCY:-2}
      - BROWSERGRID_WORKER_POLL_INTERVAL=${BROWSERGRID_WORKER_POLL_INTERVAL:-10s}
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    networks:
      - browsergrid_server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker provider
    restart: unless-stopped

  prometheus:
    container_name: browsergrid-prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - browsergrid_server
    restart: unless-stopped

  asynqmon:
    container_name: browsergrid-asynqmon
    image: hibiken/asynqmon:latest
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
      - PORT=4444
      - ENABLE_METRICS_EXPORTER=true
      - PROMETHEUS_ADDR=http://prometheus:9090
    depends_on:
      redis:
        condition: service_started
      prometheus:
        condition: service_started
    ports:
      - "4444:4444"
    networks:
      - browsergrid_server
    restart: unless-stopped

networks:
  browsergrid_server:
    name: browsergrid_server

volumes:
  postgres_data:
  prometheus_data: 