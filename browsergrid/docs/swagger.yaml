basePath: /
definitions:
  Browser:
    description: Supported browser types
    enum:
    - chrome
    - chromium
    - firefox
    - edge
    - webkit
    - safari
    type: string
    x-enum-varnames:
    - BrowserChrome
    - BrowserChromium
    - BrowserFirefox
    - BrowserEdge
    - BrowserOpera
    - BrowserSafari
  BrowserVersion:
    description: Browser version types (latest, stable, canary, dev)
    enum:
    - latest
    - stable
    - canary
    - dev
    type: string
    x-enum-varnames:
    - VerLatest
    - VerStable
    - VerCanary
    - VerDev
  DeploymentStatus:
    description: Current status of a deployment
    enum:
    - active
    - inactive
    - deploying
    - failed
    - deprecated
    type: string
    x-enum-varnames:
    - StatusActive
    - StatusInactive
    - StatusDeploying
    - StatusFailed
    - StatusDeprecated
  ErrorResponse:
    description: Error response with details
    properties:
      error:
        example: Validation failed
        type: string
    type: object
  MessageResponse:
    description: Simple message response
    properties:
      message:
        example: Operation completed successfully
        type: string
    type: object
  OperatingSystem:
    description: Supported operating systems for browser sessions
    enum:
    - windows
    - macos
    - linux
    type: string
    x-enum-varnames:
    - OSWindows
    - OSMacOS
    - OSLinux
  ProviderType:
    description: Type of provider for a work pool
    enum:
    - docker
    - azure_aci
    - local
    type: string
    x-enum-varnames:
    - ProviderDocker
    - ProviderACI
    - ProviderLocal
  ProxyConfig:
    description: Proxy configuration with URL and optional credentials
    properties:
      proxy_password:
        example: pass
        type: string
      proxy_url:
        example: http://proxy.example.com:8080
        type: string
      proxy_username:
        example: user
        type: string
    type: object
  ResourceLimits:
    description: Resource limits for CPU, memory and timeout
    properties:
      cpu:
        example: 2
        type: number
      memory:
        example: 2GB
        type: string
      timeout_minutes:
        example: 30
        type: integer
    type: object
  RunStatus:
    description: Current status of a deployment run
    enum:
    - pending
    - running
    - completed
    - failed
    - cancelled
    type: string
    x-enum-varnames:
    - RunStatusPending
    - RunStatusRunning
    - RunStatusCompleted
    - RunStatusFailed
    - RunStatusCancelled
  Runtime:
    description: Supported deployment runtimes
    enum:
    - node
    - python
    type: string
    x-enum-varnames:
    - RuntimeNode
    - RuntimePython
  ScalingRequest:
    description: Scaling parameters for updating work pool configuration
    properties:
      auto_scale:
        example: true
        type: boolean
      max_concurrency:
        example: 10
        minimum: 1
        type: integer
      max_idle_time:
        example: 1800
        minimum: 0
        type: integer
      max_session_duration:
        example: 1800
        minimum: 60
        type: integer
      min_size:
        example: 1
        minimum: 0
        type: integer
      paused:
        example: false
        type: boolean
    type: object
  ScalingResponse:
    description: Response from a scaling operation with updated parameters
    properties:
      message:
        example: pool scaled
        type: string
      updates:
        additionalProperties: true
        type: object
    type: object
  ScreenConfig:
    description: Screen configuration with width, height, DPI and scale
    properties:
      dpi:
        example: 96
        type: integer
      height:
        example: 1080
        type: integer
      scale:
        example: 1
        type: number
      width:
        example: 1920
        type: integer
    type: object
  Session:
    description: Browser session with configuration and status
    properties:
      available_at:
        example: "2023-01-01T00:15:00Z"
        type: string
      browser:
        allOf:
        - $ref: '#/definitions/Browser'
        example: chrome
      claimed_at:
        example: "2023-01-01T00:30:00Z"
        type: string
      claimed_by:
        example: client-123
        type: string
      container_id:
        example: abc123
        type: string
      container_network:
        example: browsergrid_default
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      environment:
        type: object
      expires_at:
        example: "2023-01-01T01:00:00Z"
        type: string
      headless:
        example: true
        type: boolean
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      is_pooled:
        example: false
        type: boolean
      live_url:
        example: http://localhost:80
        type: string
      operating_system:
        allOf:
        - $ref: '#/definitions/OperatingSystem'
        example: linux
      pool_id:
        example: chrome-pool
        type: string
      profile_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      provider:
        example: local
        type: string
      proxy:
        $ref: '#/definitions/ProxyConfig'
      resource_limits:
        $ref: '#/definitions/ResourceLimits'
      screen:
        $ref: '#/definitions/ScreenConfig'
      status:
        allOf:
        - $ref: '#/definitions/SessionStatus'
        example: pending
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      version:
        allOf:
        - $ref: '#/definitions/BrowserVersion'
        example: latest
      webhooks_enabled:
        example: false
        type: boolean
      work_pool_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      ws_endpoint:
        example: ws://localhost:80/devtools/browser
        type: string
    type: object
  SessionEvent:
    description: Session event with type, data and timestamp
    properties:
      data:
        type: object
      event:
        allOf:
        - $ref: '#/definitions/SessionEventType'
        example: session_created
      id:
        example: 550e8400-e29b-41d4-a716-446655440003
        type: string
      session_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      timestamp:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  SessionEventListResponse:
    description: Response containing a list of session events with pagination info
    properties:
      events:
        items:
          $ref: '#/definitions/SessionEvent'
        type: array
      limit:
        example: 100
        type: integer
      offset:
        example: 0
        type: integer
      total:
        example: 15
        type: integer
    type: object
  SessionEventType:
    description: Types of events that can occur during a session
    enum:
    - session_created
    - resource_allocated
    - session_starting
    - container_started
    - browser_started
    - session_available
    - session_claimed
    - session_assigned
    - session_ready
    - session_active
    - session_idle
    - heartbeat
    - pool_added
    - pool_removed
    - pool_drained
    - session_completed
    - session_expired
    - session_timed_out
    - session_terminated
    - startup_failed
    - browser_crashed
    - container_crashed
    - resource_exhausted
    - network_error
    - status_changed
    - config_updated
    - health_check
    type: string
    x-enum-varnames:
    - EvtSessionCreated
    - EvtResourceAllocated
    - EvtSessionStarting
    - EvtContainerStarted
    - EvtBrowserStarted
    - EvtSessionAvailable
    - EvtSessionClaimed
    - EvtSessionAssigned
    - EvtSessionReady
    - EvtSessionActive
    - EvtSessionIdle
    - EvtHeartbeat
    - EvtPoolAdded
    - EvtPoolRemoved
    - EvtPoolDrained
    - EvtSessionCompleted
    - EvtSessionExpired
    - EvtSessionTimedOut
    - EvtSessionTerminated
    - EvtStartupFailed
    - EvtBrowserCrashed
    - EvtContainerCrashed
    - EvtResourceExhausted
    - EvtNetworkError
    - EvtStatusChanged
    - EvtConfigUpdated
    - EvtHealthCheck
  SessionListResponse:
    description: Response containing a list of sessions with pagination info
    properties:
      limit:
        example: 100
        type: integer
      offset:
        example: 0
        type: integer
      sessions:
        items:
          $ref: '#/definitions/Session'
        type: array
      total:
        example: 25
        type: integer
    type: object
  SessionMetrics:
    description: Performance metrics including CPU, memory and network usage
    properties:
      cpu_percent:
        example: 45.2
        type: number
      id:
        example: 550e8400-e29b-41d4-a716-446655440004
        type: string
      memory_mb:
        example: 1024.5
        type: number
      network_rx_bytes:
        example: 1048576
        type: integer
      network_tx_bytes:
        example: 2097152
        type: integer
      session_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      timestamp:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  SessionStatus:
    description: Current status of a browser session
    enum:
    - pending
    - starting
    - available
    - claimed
    - running
    - idle
    - completed
    - failed
    - expired
    - crashed
    - timed_out
    - terminated
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusStarting
    - StatusAvailable
    - StatusClaimed
    - StatusRunning
    - StatusIdle
    - StatusCompleted
    - StatusFailed
    - StatusExpired
    - StatusCrashed
    - StatusTimedOut
    - StatusTerminated
  WorkPool:
    description: Work pool configuration for managing browser workers
    properties:
      auto_scale:
        example: true
        type: boolean
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      default_env:
        type: object
      default_image:
        example: browsergrid/chrome:latest
        type: string
      default_priority:
        example: 0
        type: integer
      description:
        example: Pool for Chrome browser workers
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      max_concurrency:
        example: 10
        type: integer
      max_idle_time:
        example: 1800
        type: integer
      max_session_duration:
        example: 1800
        type: integer
      min_size:
        example: 0
        type: integer
      name:
        example: Chrome Workers
        type: string
      paused:
        example: false
        type: boolean
      provider:
        allOf:
        - $ref: '#/definitions/ProviderType'
        example: docker
      queue_strategy:
        example: fifo
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  WorkPoolListResponse:
    description: Response containing a list of work pools
    properties:
      pools:
        items:
          $ref: '#/definitions/WorkPool'
        type: array
      total:
        example: 5
        type: integer
    type: object
  internal_deployments.BrowserRequest:
    description: Browser session configuration for deployment
    properties:
      browser:
        type: string
      environment:
        additionalProperties:
          type: string
        type: object
      headless:
        type: boolean
      operating_system:
        type: string
      profile_id:
        type: string
      screen:
        additionalProperties: true
        type: object
      version:
        type: string
    type: object
  internal_deployments.CreateDeploymentRequest:
    properties:
      config:
        $ref: '#/definitions/internal_deployments.DeploymentConfig'
      description:
        type: string
      name:
        type: string
      package_hash:
        type: string
      package_url:
        type: string
      runtime:
        $ref: '#/definitions/Runtime'
      version:
        type: string
    required:
    - name
    - package_hash
    - package_url
    - runtime
    - version
    type: object
  internal_deployments.CreateDeploymentRunRequest:
    properties:
      config:
        additionalProperties: true
        type: object
      environment:
        additionalProperties:
          type: string
        type: object
    type: object
  internal_deployments.Deployment:
    description: Deployment package with configuration and metadata
    properties:
      config:
        items:
          type: integer
        type: array
      created_at:
        type: string
      description:
        type: string
      failed_runs:
        type: integer
      id:
        type: string
      last_run_at:
        type: string
      name:
        type: string
      package_hash:
        type: string
      package_url:
        type: string
      runs:
        description: Relationships
        items:
          $ref: '#/definitions/internal_deployments.DeploymentRun'
        type: array
      runtime:
        $ref: '#/definitions/Runtime'
      status:
        $ref: '#/definitions/DeploymentStatus'
      successful_runs:
        type: integer
      total_runs:
        description: Computed fields
        type: integer
      updated_at:
        type: string
      version:
        type: string
    type: object
  internal_deployments.DeploymentConfig:
    description: Deployment configuration settings
    properties:
      browser_requests:
        items:
          $ref: '#/definitions/internal_deployments.BrowserRequest'
        type: array
      concurrency:
        type: integer
      environment:
        additionalProperties:
          type: string
        type: object
      max_retries:
        type: integer
      resource_limits:
        additionalProperties: true
        type: object
      schedule:
        type: string
      timeout_seconds:
        type: integer
      trigger_events:
        items:
          type: string
        type: array
    type: object
  internal_deployments.DeploymentListResponse:
    properties:
      deployments:
        items:
          $ref: '#/definitions/internal_deployments.Deployment'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  internal_deployments.DeploymentRun:
    description: Deployment run with execution details and results
    properties:
      completed_at:
        type: string
      created_at:
        type: string
      deployment:
        allOf:
        - $ref: '#/definitions/internal_deployments.Deployment'
        description: Relationships
      deployment_id:
        type: string
      duration_seconds:
        description: Computed fields
        type: integer
      error:
        type: string
      id:
        type: string
      output:
        items:
          type: integer
        type: array
      session_id:
        type: string
      started_at:
        type: string
      status:
        $ref: '#/definitions/RunStatus'
      updated_at:
        type: string
    type: object
  internal_deployments.DeploymentRunListResponse:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      runs:
        items:
          $ref: '#/definitions/internal_deployments.DeploymentRun'
        type: array
      total:
        type: integer
    type: object
  internal_deployments.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  internal_deployments.MessageResponse:
    properties:
      message:
        type: string
    type: object
  internal_deployments.UpdateDeploymentRequest:
    properties:
      config:
        $ref: '#/definitions/internal_deployments.DeploymentConfig'
      description:
        type: string
      status:
        $ref: '#/definitions/DeploymentStatus'
    type: object
  internal_profiles.CreateProfileRequest:
    properties:
      browser:
        allOf:
        - $ref: '#/definitions/Browser'
        enum:
        - chrome
        - chromium
        - firefox
        - edge
        - webkit
        - safari
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - browser
    - name
    type: object
  internal_profiles.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  internal_profiles.MessageResponse:
    properties:
      message:
        type: string
    type: object
  internal_profiles.Profile:
    properties:
      active_sessions:
        description: Computed fields
        type: integer
      browser:
        $ref: '#/definitions/Browser'
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      last_used_at:
        type: string
      metadata:
        items:
          type: integer
        type: array
      name:
        type: string
      size_bytes:
        type: integer
      storage_backend:
        $ref: '#/definitions/internal_profiles.StorageBackend'
      total_sessions:
        type: integer
      updated_at:
        type: string
    type: object
  internal_profiles.ProfileListResponse:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      profiles:
        items:
          $ref: '#/definitions/internal_profiles.Profile'
        type: array
      total:
        type: integer
    type: object
  internal_profiles.StorageBackend:
    enum:
    - local
    - s3
    type: string
    x-enum-varnames:
    - StorageBackendLocal
    - StorageBackendS3
  internal_profiles.UpdateProfileRequest:
    properties:
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8765
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: BrowserGrid is a distributed browser automation platform using task
    queues for scalable browser session management.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BrowserGrid API
  version: "2.0"
paths:
  /api/v1/deployments:
    get:
      consumes:
      - application/json
      description: Get a list of all deployments with optional filtering
      parameters:
      - description: Filter by deployment status
        in: query
        name: status
        type: string
      - description: Filter by runtime
        in: query
        name: runtime
        type: string
      - default: 0
        description: Number of deployments to skip
        in: query
        name: offset
        type: integer
      - default: 20
        description: Maximum number of deployments to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of deployments
          schema:
            $ref: '#/definitions/internal_deployments.DeploymentListResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: List deployments
      tags:
      - deployments
    post:
      consumes:
      - application/json
      description: Create a new deployment package with specified configuration
      parameters:
      - description: Deployment configuration
        in: body
        name: deployment
        required: true
        schema:
          $ref: '#/definitions/internal_deployments.CreateDeploymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Deployment created successfully
          schema:
            $ref: '#/definitions/internal_deployments.Deployment'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Create a new deployment
      tags:
      - deployments
  /api/v1/deployments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a deployment and all its runs
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deployment deleted successfully
          schema:
            $ref: '#/definitions/internal_deployments.MessageResponse'
        "400":
          description: Invalid deployment ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Delete a deployment
      tags:
      - deployments
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific deployment
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deployment details
          schema:
            $ref: '#/definitions/internal_deployments.Deployment'
        "400":
          description: Invalid deployment ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Get a deployment
      tags:
      - deployments
    patch:
      consumes:
      - application/json
      description: Update deployment metadata and configuration
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Deployment updates
        in: body
        name: deployment
        required: true
        schema:
          $ref: '#/definitions/internal_deployments.UpdateDeploymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Deployment updated successfully
          schema:
            $ref: '#/definitions/internal_deployments.Deployment'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Update a deployment
      tags:
      - deployments
  /api/v1/deployments/{id}/runs:
    get:
      consumes:
      - application/json
      description: Get a list of runs for a specific deployment
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Filter by run status
        in: query
        name: status
        type: string
      - default: 0
        description: Number of runs to skip
        in: query
        name: offset
        type: integer
      - default: 20
        description: Maximum number of runs to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of deployment runs
          schema:
            $ref: '#/definitions/internal_deployments.DeploymentRunListResponse'
        "400":
          description: Invalid deployment ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: List deployment runs
      tags:
      - deployments
    post:
      consumes:
      - application/json
      description: Trigger a manual run of a deployment
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Deployment run configuration
        in: body
        name: run
        required: true
        schema:
          $ref: '#/definitions/internal_deployments.CreateDeploymentRunRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Deployment run created successfully
          schema:
            $ref: '#/definitions/internal_deployments.DeploymentRun'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Create a new deployment run
      tags:
      - deployments
  /api/v1/deployments/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get detailed statistics for a deployment
      parameters:
      - description: Deployment ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deployment statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid deployment ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Get deployment statistics
      tags:
      - deployments
  /api/v1/events:
    get:
      consumes:
      - application/json
      description: Get a list of events for browser sessions with optional filtering
        by session ID, event type, time range, and pagination
      parameters:
      - description: Session ID (UUID) - alternative to path parameter
        in: query
        name: session_id
        type: string
      - description: Filter by event type
        enum:
        - session_created
        - resource_allocated
        - session_starting
        - container_started
        - browser_started
        - session_available
        - session_claimed
        - session_assigned
        - session_ready
        - session_active
        - session_idle
        - heartbeat
        - pool_added
        - pool_removed
        - pool_drained
        - session_completed
        - session_expired
        - session_timed_out
        - session_terminated
        - startup_failed
        - browser_crashed
        - container_crashed
        - resource_exhausted
        - network_error
        - status_changed
        - config_updated
        - health_check
        in: query
        name: event_type
        type: string
      - description: Filter events after this time (RFC3339 format)
        in: query
        name: start_time
        type: string
      - description: Filter events before this time (RFC3339 format)
        in: query
        name: end_time
        type: string
      - default: 0
        description: Number of events to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: 100
        description: Maximum number of events to return
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of events
          schema:
            $ref: '#/definitions/SessionEventListResponse'
        "400":
          description: Invalid session ID or parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List session events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event for a browser session. The session ID can be
        provided in the URL path or in the request body.
      parameters:
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/SessionEvent'
      produces:
      - application/json
      responses:
        "201":
          description: Event created successfully
          schema:
            $ref: '#/definitions/SessionEvent'
        "400":
          description: Invalid request data or missing session_id/event
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a session event
      tags:
      - events
  /api/v1/metrics:
    post:
      consumes:
      - application/json
      description: Create performance metrics for a browser session. The session ID
        can be provided in the URL path or in the request body.
      parameters:
      - description: Performance metrics data
        in: body
        name: metrics
        required: true
        schema:
          $ref: '#/definitions/SessionMetrics'
      produces:
      - application/json
      responses:
        "201":
          description: Metrics created successfully
          schema:
            $ref: '#/definitions/SessionMetrics'
        "400":
          description: Invalid request data or missing session_id
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create session metrics
      tags:
      - metrics
  /api/v1/profiles:
    get:
      consumes:
      - application/json
      description: Get a paginated list of browser profiles
      parameters:
      - description: Filter by browser type
        enum:
        - chrome
        - chromium
        - firefox
        - edge
        - webkit
        - safari
        in: query
        name: browser
        type: string
      - default: 0
        description: Number of profiles to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: 20
        description: Maximum number of profiles to return
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of profiles
          schema:
            $ref: '#/definitions/internal_profiles.ProfileListResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: List profiles
      tags:
      - profiles
    post:
      consumes:
      - application/json
      description: Create a new browser profile for saving and reusing browser state
      parameters:
      - description: Profile configuration
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/internal_profiles.CreateProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Profile created successfully
          schema:
            $ref: '#/definitions/internal_profiles.Profile'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Create a new profile
      tags:
      - profiles
  /api/v1/profiles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a profile and its associated data. Cannot delete profiles
        with active sessions.
      parameters:
      - description: Profile ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile deleted successfully
          schema:
            $ref: '#/definitions/internal_profiles.MessageResponse'
        "400":
          description: Invalid profile ID or profile has active sessions
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "404":
          description: Profile not found
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Delete a profile
      tags:
      - profiles
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific profile
      parameters:
      - description: Profile ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile details
          schema:
            $ref: '#/definitions/internal_profiles.Profile'
        "400":
          description: Invalid profile ID
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "404":
          description: Profile not found
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Get a profile
      tags:
      - profiles
    patch:
      consumes:
      - application/json
      description: Update profile metadata (name, description)
      parameters:
      - description: Profile ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/internal_profiles.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated profile
          schema:
            $ref: '#/definitions/internal_profiles.Profile'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "404":
          description: Profile not found
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Update a profile
      tags:
      - profiles
  /api/v1/profiles/{id}/export:
    get:
      consumes:
      - application/json
      description: Export a browser profile as a ZIP archive
      parameters:
      - description: Profile ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/zip
      responses:
        "200":
          description: Profile ZIP archive
          schema:
            type: file
        "400":
          description: Invalid profile ID
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "404":
          description: Profile not found
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Export a profile
      tags:
      - profiles
  /api/v1/profiles/import:
    post:
      consumes:
      - multipart/form-data
      description: Import a browser profile from a ZIP archive
      parameters:
      - description: Profile ZIP archive
        in: formData
        name: file
        required: true
        type: file
      - description: Profile name
        in: formData
        name: name
        required: true
        type: string
      - description: Profile description
        in: formData
        name: description
        type: string
      - description: Browser type
        enum:
        - chrome
        - chromium
        - firefox
        - edge
        - webkit
        - safari
        in: formData
        name: browser
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Profile imported successfully
          schema:
            $ref: '#/definitions/internal_profiles.Profile'
        "400":
          description: Invalid request or file
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_profiles.ErrorResponse'
      summary: Import a profile
      tags:
      - profiles
  /api/v1/runs:
    get:
      consumes:
      - application/json
      description: Get a list of all deployment runs across all deployments
      parameters:
      - description: Filter by run status
        in: query
        name: status
        type: string
      - default: 0
        description: Number of runs to skip
        in: query
        name: offset
        type: integer
      - default: 20
        description: Maximum number of runs to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of deployment runs
          schema:
            $ref: '#/definitions/internal_deployments.DeploymentRunListResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: List all deployment runs
      tags:
      - deployments
  /api/v1/runs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a deployment run
      parameters:
      - description: Run ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Run deleted successfully
          schema:
            $ref: '#/definitions/internal_deployments.MessageResponse'
        "400":
          description: Invalid run ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Run not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Delete a deployment run
      tags:
      - deployments
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific deployment run
      parameters:
      - description: Run ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deployment run details
          schema:
            $ref: '#/definitions/internal_deployments.DeploymentRun'
        "400":
          description: Invalid run ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Run not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Get a deployment run
      tags:
      - deployments
  /api/v1/runs/{id}/logs:
    get:
      consumes:
      - application/json
      description: Get logs for a specific deployment run
      parameters:
      - description: Run ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deployment run logs
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid run ID
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
        "404":
          description: Run not found
          schema:
            $ref: '#/definitions/internal_deployments.ErrorResponse'
      summary: Get deployment run logs
      tags:
      - deployments
  /api/v1/sessions:
    get:
      consumes:
      - application/json
      description: Get a list of browser sessions with optional filtering by status,
        time range, and pagination
      parameters:
      - description: Filter by session status
        enum:
        - pending
        - starting
        - available
        - claimed
        - running
        - idle
        - completed
        - failed
        - expired
        - crashed
        - timed_out
        - terminated
        in: query
        name: status
        type: string
      - description: Filter sessions created after this time (RFC3339 format)
        in: query
        name: start_time
        type: string
      - description: Filter sessions created before this time (RFC3339 format)
        in: query
        name: end_time
        type: string
      - default: 0
        description: Number of sessions to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: 100
        description: Maximum number of sessions to return
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of sessions
          schema:
            $ref: '#/definitions/SessionListResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List browser sessions
      tags:
      - sessions
    post:
      consumes:
      - application/json
      description: Create a new browser session with specified configuration. The
        session will be created in pending status and a start task will be enqueued.
      parameters:
      - description: Session configuration
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/Session'
      produces:
      - application/json
      responses:
        "201":
          description: Session created successfully
          schema:
            $ref: '#/definitions/Session'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new browser session
      tags:
      - sessions
  /api/v1/sessions/{id}:
    delete:
      consumes:
      - application/json
      description: Stop and terminate a running browser session. If the session is
        already in a terminal state, it will return success immediately.
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session termination initiated or already terminated
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Invalid session ID
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Session not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a browser session
      tags:
      - sessions
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific browser session by its
        ID
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session details
          schema:
            $ref: '#/definitions/Session'
        "400":
          description: Invalid session ID
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Session not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a browser session
      tags:
      - sessions
  /api/v1/sessions/{id}/events:
    get:
      consumes:
      - application/json
      description: Get a list of events for browser sessions with optional filtering
        by session ID, event type, time range, and pagination
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Session ID (UUID) - alternative to path parameter
        in: query
        name: session_id
        type: string
      - description: Filter by event type
        enum:
        - session_created
        - resource_allocated
        - session_starting
        - container_started
        - browser_started
        - session_available
        - session_claimed
        - session_assigned
        - session_ready
        - session_active
        - session_idle
        - heartbeat
        - pool_added
        - pool_removed
        - pool_drained
        - session_completed
        - session_expired
        - session_timed_out
        - session_terminated
        - startup_failed
        - browser_crashed
        - container_crashed
        - resource_exhausted
        - network_error
        - status_changed
        - config_updated
        - health_check
        in: query
        name: event_type
        type: string
      - description: Filter events after this time (RFC3339 format)
        in: query
        name: start_time
        type: string
      - description: Filter events before this time (RFC3339 format)
        in: query
        name: end_time
        type: string
      - default: 0
        description: Number of events to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: 100
        description: Maximum number of events to return
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of events
          schema:
            $ref: '#/definitions/SessionEventListResponse'
        "400":
          description: Invalid session ID or parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List session events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event for a browser session. The session ID can be
        provided in the URL path or in the request body.
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/SessionEvent'
      produces:
      - application/json
      responses:
        "201":
          description: Event created successfully
          schema:
            $ref: '#/definitions/SessionEvent'
        "400":
          description: Invalid request data or missing session_id/event
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a session event
      tags:
      - events
  /api/v1/sessions/{id}/metrics:
    post:
      consumes:
      - application/json
      description: Create performance metrics for a browser session. The session ID
        can be provided in the URL path or in the request body.
      parameters:
      - description: Session ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Performance metrics data
        in: body
        name: metrics
        required: true
        schema:
          $ref: '#/definitions/SessionMetrics'
      produces:
      - application/json
      responses:
        "201":
          description: Metrics created successfully
          schema:
            $ref: '#/definitions/SessionMetrics'
        "400":
          description: Invalid request data or missing session_id
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create session metrics
      tags:
      - metrics
  /api/v1/workpools:
    get:
      consumes:
      - application/json
      description: Get a list of all work pools with optional filtering
      parameters:
      - description: Filter by paused status
        in: query
        name: paused
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of work pools
          schema:
            $ref: '#/definitions/WorkPoolListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List work pools
      tags:
      - workpools
    post:
      consumes:
      - application/json
      description: Create a new work pool to manage browser workers
      parameters:
      - description: Work pool configuration
        in: body
        name: workpool
        required: true
        schema:
          $ref: '#/definitions/WorkPool'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/WorkPool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new work pool
      tags:
      - workpools
  /api/v1/workpools/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing work pool and all its workers
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a work pool
      tags:
      - workpools
    get:
      consumes:
      - application/json
      description: Get details of a specific work pool by ID
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkPool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a work pool
      tags:
      - workpools
    patch:
      consumes:
      - application/json
      description: Update configuration of an existing work pool
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a work pool
      tags:
      - workpools
  /api/v1/workpools/{id}/drain:
    post:
      consumes:
      - application/json
      description: Gracefully drain all workers from a work pool
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Drain a work pool
      tags:
      - workpools
  /api/v1/workpools/{id}/scale:
    post:
      consumes:
      - application/json
      description: Update scaling parameters for a work pool
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Scaling parameters
        in: body
        name: scaling
        required: true
        schema:
          $ref: '#/definitions/ScalingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Scaling operation result
          schema:
            $ref: '#/definitions/ScalingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Scale a work pool
      tags:
      - workpools
  /api/v1/workpools/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get detailed statistics and metrics for a specific work pool
      parameters:
      - description: Work Pool ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Work pool statistics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get work pool statistics
      tags:
      - pool-management
securityDefinitions:
  ApiKeyAuth:
    description: API key for authentication. Can also be provided via query parameter
      'api_key' or Authorization header.
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
