{
    "swagger": "2.0",
    "info": {
        "description": "BrowserGrid is a distributed browser automation platform using task queues for scalable browser session management.",
        "title": "BrowserGrid API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8765",
    "basePath": "/",
    "paths": {
        "/api/v1/deployments": {
            "get": {
                "description": "Get a list of all deployments with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "List deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by deployment status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by runtime",
                        "name": "runtime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of deployments to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of deployments to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployments",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.DeploymentListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new deployment package with specified configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Create a new deployment",
                "parameters": [
                    {
                        "description": "Deployment configuration",
                        "name": "deployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.CreateDeploymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Deployment created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{id}": {
            "get": {
                "description": "Get detailed information about a specific deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment details",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Invalid deployment ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a deployment and all its runs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Delete a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid deployment ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update deployment metadata and configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Update a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deployment updates",
                        "name": "deployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.UpdateDeploymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment updated successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{id}/runs": {
            "get": {
                "description": "Get a list of runs for a specific deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "List deployment runs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by run status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of runs to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of runs to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployment runs",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.DeploymentRunListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid deployment ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Trigger a manual run of a deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Create a new deployment run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deployment run configuration",
                        "name": "run",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.CreateDeploymentRunRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Deployment run created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.DeploymentRun"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{id}/stats": {
            "get": {
                "description": "Get detailed statistics for a deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get deployment statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid deployment ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/events": {
            "get": {
                "description": "Get a list of events for browser sessions with optional filtering by session ID, event type, time range, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List session events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID) - alternative to path parameter",
                        "name": "session_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "session_created",
                            "resource_allocated",
                            "session_starting",
                            "container_started",
                            "browser_started",
                            "session_available",
                            "session_claimed",
                            "session_assigned",
                            "session_ready",
                            "session_active",
                            "session_idle",
                            "heartbeat",
                            "pool_added",
                            "pool_removed",
                            "pool_drained",
                            "session_completed",
                            "session_expired",
                            "session_timed_out",
                            "session_terminated",
                            "startup_failed",
                            "browser_crashed",
                            "container_crashed",
                            "resource_exhausted",
                            "network_error",
                            "status_changed",
                            "config_updated",
                            "health_check"
                        ],
                        "type": "string",
                        "description": "Filter by event type",
                        "name": "event_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter events after this time (RFC3339 format)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter events before this time (RFC3339 format)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of events to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of events to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "$ref": "#/definitions/SessionEventListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID or parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new event for a browser session. The session ID can be provided in the URL path or in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create a session event",
                "parameters": [
                    {
                        "description": "Event data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SessionEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/SessionEvent"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or missing session_id/event",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/metrics": {
            "post": {
                "description": "Create performance metrics for a browser session. The session ID can be provided in the URL path or in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Create session metrics",
                "parameters": [
                    {
                        "description": "Performance metrics data",
                        "name": "metrics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SessionMetrics"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Metrics created successfully",
                        "schema": {
                            "$ref": "#/definitions/SessionMetrics"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or missing session_id",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles": {
            "get": {
                "description": "Get a paginated list of browser profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "List profiles",
                "parameters": [
                    {
                        "enum": [
                            "chrome",
                            "chromium",
                            "firefox",
                            "edge",
                            "webkit",
                            "safari"
                        ],
                        "type": "string",
                        "description": "Filter by browser type",
                        "name": "browser",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of profiles to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of profiles to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of profiles",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ProfileListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new browser profile for saving and reusing browser state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Create a new profile",
                "parameters": [
                    {
                        "description": "Profile configuration",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.CreateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Profile created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/import": {
            "post": {
                "description": "Import a browser profile from a ZIP archive",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Import a profile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Profile ZIP archive",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Profile name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Profile description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "chrome",
                            "chromium",
                            "firefox",
                            "edge",
                            "webkit",
                            "safari"
                        ],
                        "type": "string",
                        "description": "Browser type",
                        "name": "browser",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Profile imported successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request or file",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{id}": {
            "get": {
                "description": "Get detailed information about a specific profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Get a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile details",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid profile ID",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a profile and its associated data. Cannot delete profiles with active sessions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Delete a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid profile ID or profile has active sessions",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update profile metadata (name, description)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{id}/export": {
            "get": {
                "description": "Export a browser profile as a ZIP archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Export a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile ZIP archive",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid profile ID",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_profiles.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/runs": {
            "get": {
                "description": "Get a list of all deployment runs across all deployments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "List all deployment runs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by run status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of runs to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of runs to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployment runs",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.DeploymentRunListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/runs/{id}": {
            "get": {
                "description": "Get detailed information about a specific deployment run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get a deployment run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Run ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment run details",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.DeploymentRun"
                        }
                    },
                    "400": {
                        "description": "Invalid run ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Run not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a deployment run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Delete a deployment run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Run ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Run deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid run ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Run not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/runs/{id}/logs": {
            "get": {
                "description": "Get logs for a specific deployment run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get deployment run logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Run ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment run logs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid run ID",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Run not found",
                        "schema": {
                            "$ref": "#/definitions/internal_deployments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions": {
            "get": {
                "description": "Get a list of browser sessions with optional filtering by status, time range, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "List browser sessions",
                "parameters": [
                    {
                        "enum": [
                            "pending",
                            "starting",
                            "available",
                            "claimed",
                            "running",
                            "idle",
                            "completed",
                            "failed",
                            "expired",
                            "crashed",
                            "timed_out",
                            "terminated"
                        ],
                        "type": "string",
                        "description": "Filter by session status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter sessions created after this time (RFC3339 format)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter sessions created before this time (RFC3339 format)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of sessions to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of sessions to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sessions",
                        "schema": {
                            "$ref": "#/definitions/SessionListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new browser session with specified configuration. The session will be created in pending status and a start task will be enqueued.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Create a new browser session",
                "parameters": [
                    {
                        "description": "Session configuration",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Session created successfully",
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{id}": {
            "get": {
                "description": "Get detailed information about a specific browser session by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get a browser session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session details",
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Stop and terminate a running browser session. If the session is already in a terminal state, it will return success immediately.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Delete a browser session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session termination initiated or already terminated",
                        "schema": {
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{id}/events": {
            "get": {
                "description": "Get a list of events for browser sessions with optional filtering by session ID, event type, time range, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List session events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID (UUID) - alternative to path parameter",
                        "name": "session_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "session_created",
                            "resource_allocated",
                            "session_starting",
                            "container_started",
                            "browser_started",
                            "session_available",
                            "session_claimed",
                            "session_assigned",
                            "session_ready",
                            "session_active",
                            "session_idle",
                            "heartbeat",
                            "pool_added",
                            "pool_removed",
                            "pool_drained",
                            "session_completed",
                            "session_expired",
                            "session_timed_out",
                            "session_terminated",
                            "startup_failed",
                            "browser_crashed",
                            "container_crashed",
                            "resource_exhausted",
                            "network_error",
                            "status_changed",
                            "config_updated",
                            "health_check"
                        ],
                        "type": "string",
                        "description": "Filter by event type",
                        "name": "event_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter events after this time (RFC3339 format)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter events before this time (RFC3339 format)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of events to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 100,
                        "description": "Maximum number of events to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "$ref": "#/definitions/SessionEventListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID or parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new event for a browser session. The session ID can be provided in the URL path or in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create a session event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SessionEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/SessionEvent"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or missing session_id/event",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{id}/metrics": {
            "post": {
                "description": "Create performance metrics for a browser session. The session ID can be provided in the URL path or in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Create session metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Performance metrics data",
                        "name": "metrics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SessionMetrics"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Metrics created successfully",
                        "schema": {
                            "$ref": "#/definitions/SessionMetrics"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or missing session_id",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workpools": {
            "get": {
                "description": "Get a list of all work pools with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "List work pools",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by paused status",
                        "name": "paused",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of work pools",
                        "schema": {
                            "$ref": "#/definitions/WorkPoolListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new work pool to manage browser workers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Create a new work pool",
                "parameters": [
                    {
                        "description": "Work pool configuration",
                        "name": "workpool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkPool"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/WorkPool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workpools/{id}": {
            "get": {
                "description": "Get details of a specific work pool by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Get a work pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkPool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing work pool and all its workers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Delete a work pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update configuration of an existing work pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Update a work pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workpools/{id}/drain": {
            "post": {
                "description": "Gracefully drain all workers from a work pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Drain a work pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workpools/{id}/scale": {
            "post": {
                "description": "Update scaling parameters for a work pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workpools"
                ],
                "summary": "Scale a work pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scaling parameters",
                        "name": "scaling",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScalingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scaling operation result",
                        "schema": {
                            "$ref": "#/definitions/ScalingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workpools/{id}/stats": {
            "get": {
                "description": "Get detailed statistics and metrics for a specific work pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pool-management"
                ],
                "summary": "Get work pool statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work Pool ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Work pool statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Browser": {
            "description": "Supported browser types",
            "type": "string",
            "enum": [
                "chrome",
                "chromium",
                "firefox",
                "edge",
                "webkit",
                "safari"
            ],
            "x-enum-varnames": [
                "BrowserChrome",
                "BrowserChromium",
                "BrowserFirefox",
                "BrowserEdge",
                "BrowserOpera",
                "BrowserSafari"
            ]
        },
        "BrowserVersion": {
            "description": "Browser version types (latest, stable, canary, dev)",
            "type": "string",
            "enum": [
                "latest",
                "stable",
                "canary",
                "dev"
            ],
            "x-enum-varnames": [
                "VerLatest",
                "VerStable",
                "VerCanary",
                "VerDev"
            ]
        },
        "DeploymentStatus": {
            "description": "Current status of a deployment",
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "deploying",
                "failed",
                "deprecated"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusInactive",
                "StatusDeploying",
                "StatusFailed",
                "StatusDeprecated"
            ]
        },
        "ErrorResponse": {
            "description": "Error response with details",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Validation failed"
                }
            }
        },
        "MessageResponse": {
            "description": "Simple message response",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "OperatingSystem": {
            "description": "Supported operating systems for browser sessions",
            "type": "string",
            "enum": [
                "windows",
                "macos",
                "linux"
            ],
            "x-enum-varnames": [
                "OSWindows",
                "OSMacOS",
                "OSLinux"
            ]
        },
        "ProviderType": {
            "description": "Type of provider for a work pool",
            "type": "string",
            "enum": [
                "docker",
                "azure_aci",
                "local"
            ],
            "x-enum-varnames": [
                "ProviderDocker",
                "ProviderACI",
                "ProviderLocal"
            ]
        },
        "ProxyConfig": {
            "description": "Proxy configuration with URL and optional credentials",
            "type": "object",
            "properties": {
                "proxy_password": {
                    "type": "string",
                    "example": "pass"
                },
                "proxy_url": {
                    "type": "string",
                    "example": "http://proxy.example.com:8080"
                },
                "proxy_username": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "ResourceLimits": {
            "description": "Resource limits for CPU, memory and timeout",
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number",
                    "example": 2
                },
                "memory": {
                    "type": "string",
                    "example": "2GB"
                },
                "timeout_minutes": {
                    "type": "integer",
                    "example": 30
                }
            }
        },
        "RunStatus": {
            "description": "Current status of a deployment run",
            "type": "string",
            "enum": [
                "pending",
                "running",
                "completed",
                "failed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "RunStatusPending",
                "RunStatusRunning",
                "RunStatusCompleted",
                "RunStatusFailed",
                "RunStatusCancelled"
            ]
        },
        "Runtime": {
            "description": "Supported deployment runtimes",
            "type": "string",
            "enum": [
                "node",
                "python"
            ],
            "x-enum-varnames": [
                "RuntimeNode",
                "RuntimePython"
            ]
        },
        "ScalingRequest": {
            "description": "Scaling parameters for updating work pool configuration",
            "type": "object",
            "properties": {
                "auto_scale": {
                    "type": "boolean",
                    "example": true
                },
                "max_concurrency": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                },
                "max_idle_time": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1800
                },
                "max_session_duration": {
                    "type": "integer",
                    "minimum": 60,
                    "example": 1800
                },
                "min_size": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "paused": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "ScalingResponse": {
            "description": "Response from a scaling operation with updated parameters",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "pool scaled"
                },
                "updates": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "ScreenConfig": {
            "description": "Screen configuration with width, height, DPI and scale",
            "type": "object",
            "properties": {
                "dpi": {
                    "type": "integer",
                    "example": 96
                },
                "height": {
                    "type": "integer",
                    "example": 1080
                },
                "scale": {
                    "type": "number",
                    "example": 1
                },
                "width": {
                    "type": "integer",
                    "example": 1920
                }
            }
        },
        "Session": {
            "description": "Browser session with configuration and status",
            "type": "object",
            "properties": {
                "available_at": {
                    "type": "string",
                    "example": "2023-01-01T00:15:00Z"
                },
                "browser": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Browser"
                        }
                    ],
                    "example": "chrome"
                },
                "claimed_at": {
                    "type": "string",
                    "example": "2023-01-01T00:30:00Z"
                },
                "claimed_by": {
                    "type": "string",
                    "example": "client-123"
                },
                "container_id": {
                    "type": "string",
                    "example": "abc123"
                },
                "container_network": {
                    "type": "string",
                    "example": "browsergrid_default"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "environment": {
                    "type": "object"
                },
                "expires_at": {
                    "type": "string",
                    "example": "2023-01-01T01:00:00Z"
                },
                "headless": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "is_pooled": {
                    "type": "boolean",
                    "example": false
                },
                "live_url": {
                    "type": "string",
                    "example": "http://localhost:80"
                },
                "operating_system": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OperatingSystem"
                        }
                    ],
                    "example": "linux"
                },
                "pool_id": {
                    "type": "string",
                    "example": "chrome-pool"
                },
                "profile_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "provider": {
                    "type": "string",
                    "example": "local"
                },
                "proxy": {
                    "$ref": "#/definitions/ProxyConfig"
                },
                "resource_limits": {
                    "$ref": "#/definitions/ResourceLimits"
                },
                "screen": {
                    "$ref": "#/definitions/ScreenConfig"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SessionStatus"
                        }
                    ],
                    "example": "pending"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "version": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/BrowserVersion"
                        }
                    ],
                    "example": "latest"
                },
                "webhooks_enabled": {
                    "type": "boolean",
                    "example": false
                },
                "work_pool_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440002"
                },
                "ws_endpoint": {
                    "type": "string",
                    "example": "ws://localhost:80/devtools/browser"
                }
            }
        },
        "SessionEvent": {
            "description": "Session event with type, data and timestamp",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "event": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SessionEventType"
                        }
                    ],
                    "example": "session_created"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440003"
                },
                "session_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "SessionEventListResponse": {
            "description": "Response containing a list of session events with pagination info",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SessionEvent"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "SessionEventType": {
            "description": "Types of events that can occur during a session",
            "type": "string",
            "enum": [
                "session_created",
                "resource_allocated",
                "session_starting",
                "container_started",
                "browser_started",
                "session_available",
                "session_claimed",
                "session_assigned",
                "session_ready",
                "session_active",
                "session_idle",
                "heartbeat",
                "pool_added",
                "pool_removed",
                "pool_drained",
                "session_completed",
                "session_expired",
                "session_timed_out",
                "session_terminated",
                "startup_failed",
                "browser_crashed",
                "container_crashed",
                "resource_exhausted",
                "network_error",
                "status_changed",
                "config_updated",
                "health_check"
            ],
            "x-enum-varnames": [
                "EvtSessionCreated",
                "EvtResourceAllocated",
                "EvtSessionStarting",
                "EvtContainerStarted",
                "EvtBrowserStarted",
                "EvtSessionAvailable",
                "EvtSessionClaimed",
                "EvtSessionAssigned",
                "EvtSessionReady",
                "EvtSessionActive",
                "EvtSessionIdle",
                "EvtHeartbeat",
                "EvtPoolAdded",
                "EvtPoolRemoved",
                "EvtPoolDrained",
                "EvtSessionCompleted",
                "EvtSessionExpired",
                "EvtSessionTimedOut",
                "EvtSessionTerminated",
                "EvtStartupFailed",
                "EvtBrowserCrashed",
                "EvtContainerCrashed",
                "EvtResourceExhausted",
                "EvtNetworkError",
                "EvtStatusChanged",
                "EvtConfigUpdated",
                "EvtHealthCheck"
            ]
        },
        "SessionListResponse": {
            "description": "Response containing a list of sessions with pagination info",
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Session"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "SessionMetrics": {
            "description": "Performance metrics including CPU, memory and network usage",
            "type": "object",
            "properties": {
                "cpu_percent": {
                    "type": "number",
                    "example": 45.2
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440004"
                },
                "memory_mb": {
                    "type": "number",
                    "example": 1024.5
                },
                "network_rx_bytes": {
                    "type": "integer",
                    "example": 1048576
                },
                "network_tx_bytes": {
                    "type": "integer",
                    "example": 2097152
                },
                "session_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "SessionStatus": {
            "description": "Current status of a browser session",
            "type": "string",
            "enum": [
                "pending",
                "starting",
                "available",
                "claimed",
                "running",
                "idle",
                "completed",
                "failed",
                "expired",
                "crashed",
                "timed_out",
                "terminated"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusStarting",
                "StatusAvailable",
                "StatusClaimed",
                "StatusRunning",
                "StatusIdle",
                "StatusCompleted",
                "StatusFailed",
                "StatusExpired",
                "StatusCrashed",
                "StatusTimedOut",
                "StatusTerminated"
            ]
        },
        "WorkPool": {
            "description": "Work pool configuration for managing browser workers",
            "type": "object",
            "properties": {
                "auto_scale": {
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "default_env": {
                    "type": "object"
                },
                "default_image": {
                    "type": "string",
                    "example": "browsergrid/chrome:latest"
                },
                "default_priority": {
                    "type": "integer",
                    "example": 0
                },
                "description": {
                    "type": "string",
                    "example": "Pool for Chrome browser workers"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "max_concurrency": {
                    "type": "integer",
                    "example": 10
                },
                "max_idle_time": {
                    "type": "integer",
                    "example": 1800
                },
                "max_session_duration": {
                    "type": "integer",
                    "example": 1800
                },
                "min_size": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "Chrome Workers"
                },
                "paused": {
                    "type": "boolean",
                    "example": false
                },
                "provider": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProviderType"
                        }
                    ],
                    "example": "docker"
                },
                "queue_strategy": {
                    "type": "string",
                    "example": "fifo"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "WorkPoolListResponse": {
            "description": "Response containing a list of work pools",
            "type": "object",
            "properties": {
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkPool"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "internal_deployments.BrowserRequest": {
            "description": "Browser session configuration for deployment",
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "headless": {
                    "type": "boolean"
                },
                "operating_system": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "screen": {
                    "type": "object",
                    "additionalProperties": true
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.CreateDeploymentRequest": {
            "type": "object",
            "required": [
                "name",
                "package_hash",
                "package_url",
                "runtime",
                "version"
            ],
            "properties": {
                "config": {
                    "$ref": "#/definitions/internal_deployments.DeploymentConfig"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "package_hash": {
                    "type": "string"
                },
                "package_url": {
                    "type": "string"
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.CreateDeploymentRunRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_deployments.Deployment": {
            "description": "Deployment package with configuration and metadata",
            "type": "object",
            "properties": {
                "config": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "failed_runs": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_run_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "package_hash": {
                    "type": "string"
                },
                "package_url": {
                    "type": "string"
                },
                "runs": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_deployments.DeploymentRun"
                    }
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime"
                },
                "status": {
                    "$ref": "#/definitions/DeploymentStatus"
                },
                "successful_runs": {
                    "type": "integer"
                },
                "total_runs": {
                    "description": "Computed fields",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.DeploymentConfig": {
            "description": "Deployment configuration settings",
            "type": "object",
            "properties": {
                "browser_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_deployments.BrowserRequest"
                    }
                },
                "concurrency": {
                    "type": "integer"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "max_retries": {
                    "type": "integer"
                },
                "resource_limits": {
                    "type": "object",
                    "additionalProperties": true
                },
                "schedule": {
                    "type": "string"
                },
                "timeout_seconds": {
                    "type": "integer"
                },
                "trigger_events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_deployments.DeploymentListResponse": {
            "type": "object",
            "properties": {
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_deployments.Deployment"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_deployments.DeploymentRun": {
            "description": "Deployment run with execution details and results",
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deployment": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/internal_deployments.Deployment"
                        }
                    ]
                },
                "deployment_id": {
                    "type": "string"
                },
                "duration_seconds": {
                    "description": "Computed fields",
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "output": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "session_id": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/RunStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.DeploymentRunListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "runs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_deployments.DeploymentRun"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_deployments.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_deployments.UpdateDeploymentRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/internal_deployments.DeploymentConfig"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/DeploymentStatus"
                }
            }
        },
        "internal_profiles.CreateProfileRequest": {
            "type": "object",
            "required": [
                "browser",
                "name"
            ],
            "properties": {
                "browser": {
                    "enum": [
                        "chrome",
                        "chromium",
                        "firefox",
                        "edge",
                        "webkit",
                        "safari"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/Browser"
                        }
                    ]
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "internal_profiles.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_profiles.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_profiles.Profile": {
            "type": "object",
            "properties": {
                "active_sessions": {
                    "description": "Computed fields",
                    "type": "integer"
                },
                "browser": {
                    "$ref": "#/definitions/Browser"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_used_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "size_bytes": {
                    "type": "integer"
                },
                "storage_backend": {
                    "$ref": "#/definitions/internal_profiles.StorageBackend"
                },
                "total_sessions": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "internal_profiles.ProfileListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_profiles.Profile"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_profiles.StorageBackend": {
            "type": "string",
            "enum": [
                "local",
                "s3"
            ],
            "x-enum-varnames": [
                "StorageBackendLocal",
                "StorageBackendS3"
            ]
        },
        "internal_profiles.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key for authentication. Can also be provided via query parameter 'api_key' or Authorization header.",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}